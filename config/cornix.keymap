/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "zmk-helpers/helper.h"
#include "includes/cornix54.h"

// tap windows for ctl alt and gui

#define HM_TAPPING_TERM 250
#define HM_TAPPING_REPEAT 210

// quick tapping for shift

#define HM_TAPPING_TERM_FAST 200
#define HM_PRIOR_IDLE 70
#define BASE 0
#define WIN 1
#define LOWER 2
#define RAISE 3
#define ADJUST 4
#define NAVI   5
#define NUM    6
#define DEBUG  7

// https://github.com/urob/zmk-config/tree/main#timeless-homerow-mods

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // right hand
#define THUMBS LH1 LH0 RH0 RH1
#define KEYS_T LH1 LH0 RH0 RH1
#define ZMK_POINTING_DEFAULT_SCRL_VAL 15

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    // Activate ADJUST layer by pressing raise and lower

    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <100>;
            hold-trigger-key-positions = <KEYS_R KEYS_T 6 7 8 9 10 11 18 19 20 21 22 23 32 33 34 35 36 37 44 45 46 47 48 49 31>;
            hold-trigger-on-release;
            label = "HOMEROW_MODS_LEFT";
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <100>;
            hold-trigger-key-positions = <KEYS_L KEYS_T 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 30 38 39 40 41 42 43>;
            hold-trigger-on-release;
            label = "HOMEROW_MODS_RIGHT";
        };

        // Positional Homerow mods for shift
        // Use faster tapping term and disable some features that may
        // cause false negatives.
        /*
         * Non-Positional Homerow Mods
         * Used for &mm_grescm_gui behavior on left hand.
         *
         * Usage: &hm LSHFT T
         * Tap: T
         * Tap-Tap-Hold: Repeat T
         * Hold: LSHIFT
         */

        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <210>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <100>;
            flavor = "tap-preferred";
        };

        mol: mo_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&mo>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <220>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <100>;
            hold-trigger-key-positions = <KEYS_R KEYS_T 6 7 8 9 10 11 18 19 20 21 22 23 32 33 34 35 36 37 47 48 49 31 44 45 46>;
            hold-trigger-on-release;
            label = "MO_LEFT";
        };

        mor: mo_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&mo>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <220>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <100>;
            hold-trigger-key-positions = <KEYS_L KEYS_T 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 30 38 39 40 41 42 43>;
            hold-trigger-on-release;
            label = "MO_RIGHT";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos { compatible = "zmk,combos"; };

    macros {
        tap2_macro: tap2_macro {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER &macro_param_2to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>;

            label = "TAP2_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Qwer-Mac {
            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp TAB           &kp Q  &kp W        &kp E              &kp R         &kp T                           &kp Y                           &kp U         &kp I               &kp O        &kp P               &kp CAPSLOCK
&kp LEFT_CONTROL  &kp A  &hml LALT S  &hml LEFT_SHIFT D  &kp F         &kp G                           &kp H                           &kp J         &hmr RIGHT_SHIFT K  &hmr RALT L  &as COLON SEMI      &kp RIGHT_CONTROL
&kp LEFT_GUI      &kp Z  &kp X        &kp C              &kp V         &kp B             &none  &none  &kp N                           &kp M         &kp COMMA           &kp DOT      &as QUESTION SLASH  &kp RIGHT_GUI
&none             &none  &none        &mol 2 ESC         &mor 6 SPACE  &mor 3 BACKSLASH                &as DOUBLE_QUOTES SINGLE_QUOTE  &mor 4 ENTER  &mor 5 BACKSPACE    &none        &none               &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        Qwer-Win {
            bindings = <
&kp TAB           &kp Q  &kp W        &kp E              &kp R         &kp T                           &kp Y                           &kp U         &kp I               &kp O        &kp P               &kp CAPSLOCK
&kp LEFT_CONTROL  &kp A  &hml LALT S  &hml LEFT_SHIFT D  &kp F         &kp G                           &kp H                           &kp J         &hmr RIGHT_SHIFT K  &hmr RALT L  &as COLON SEMI      &kp RIGHT_CONTROL
&kp LEFT_GUI      &kp Z  &kp X        &kp C              &kp V         &kp B             &none  &none  &kp N                           &kp M         &kp COMMA           &kp DOT      &as QUESTION SLASH  &kp RIGHT_GUI
&none             &none  &none        &mol 2 ESC         &mor 7 SPACE  &mor 3 BACKSLASH                &as DOUBLE_QUOTES SINGLE_QUOTE  &mor 4 ENTER  &mor 5 BACKSPACE    &none        &none               &none
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        Fun {
            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&bootloader  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4                &kp F10  &kp F7  &kp F8      &kp F9  &none  &bootloader
&trans       &none           &kp LALT      &kp LEFT_SHIFT  &none         &none                       &kp F11  &kp F4  &kp F5      &kp F6  &none  &none
&trans       &bt BT_CLR_ALL  &bt BT_CLR    &none           &out OUT_BLE  &out OUT_USB  &none  &none  &kp F12  &kp F1  &kp F2      &kp F3  &to 0  &to 1
&none        &none           &none         &none           &none         &none                       &none    &none   &kp DELETE  &none   &none  &none
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        Nav {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | moDEBUG| RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            bindings = <
&trans  &none  &kp HOME        &kp UP_ARROW    &kp END          &none                  &none  &none  &none  &none  &none  &trans
&trans  &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none                  &none  &none  &none  &none  &none  &trans
&trans  &none  &kp PAGE_DOWN   &none           &kp PAGE_UP      &none  &trans  &trans  &none  &none  &none  &none  &none  &trans
&none   &none  &none           &none           &none            &none                  &none  &none  &none  &none  &none  &none
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        Num {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&trans  &none             &kp N7  &kp N8            &kp N9             &kp N0                     &none  &tap2_macro LESS_THAN MINUS  &tap2_macro MINUS GREATER_THAN  &tap2_macro EQUAL GREATER_THAN  &none  &trans
&trans  &kp BACKSLASH     &kp N4  &kp N5            &kp N6             &kp MINUS                  &none  &tap2_macro LESS_THAN EQUAL  &tap2_macro GREATER_THAN EQUAL  &tap2_macro EXCLAMATION EQUAL   &none  &trans
&trans  &kp SINGLE_QUOTE  &kp N1  &kp N2            &kp N3             &kp EQUAL  &trans  &trans  &none  &none                        &tap2_macro PLUS EQUAL          &tap2_macro MINUS EQUAL         &none  &trans
&none   &none             &none   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp GRAVE                  &none  &none                        &none                           &none                           &none  &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        Sym {
            bindings = <
&trans  &none              &kp AMPERSAND    &kp ASTERISK    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                  &none  &tap2_macro LESS_THAN MINUS  &tap2_macro MINUS GREATER_THAN  &tap2_macro EQUAL GREATER_THAN  &none  &trans
&trans  &kp PIPE           &kp DOLLAR       &kp PERCENT     &kp CARET             &kp UNDERSCORE                         &none  &tap2_macro LESS_THAN EQUAL  &tap2_macro GREATER_THAN EQUAL  &tap2_macro EXCLAMATION EQUAL   &none  &trans
&trans  &kp DOUBLE_QUOTES  &kp EXCLAMATION  &kp AT_SIGN     &kp HASH              &kp PLUS               &trans  &trans  &none  &none                        &tap2_macro PLUS EQUAL          &tap2_macro MINUS EQUAL         &none  &trans
&none   &none              &none            &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp TILDE                              &none  &none                        &none                           &none                           &none  &none
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        Edit-Mac {
            bindings = <
&trans  &kp LA(Q)  &kp LA(W)  &kp LA(E)  &kp LA(R)  &kp LA(T)                  &kp LA(Y)  &none  &none            &none          &none  &trans
&trans  &kp LA(A)  &kp LA(S)  &kp LA(D)  &kp LA(F)  &kp LA(G)                  &kp LA(H)  &none  &kp RIGHT_SHIFT  &kp RIGHT_ALT  &none  &trans
&trans  &kp LA(Z)  &kp LA(X)  &kp LA(C)  &kp LA(V)  &kp LA(B)  &trans  &trans  &kp LA(N)  &none  &none            &none          &none  &trans
&none   &none      &none      &none      &none      &none                      &none      &none  &none            &none          &none  &none
            >;
        };

        Edit-Win {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | BTCLR | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            bindings = <
&trans  &kp LC(Q)  &kp LC(W)  &kp LC(E)  &kp LC(R)  &kp LC(T)                  &kp LC(Y)  &none  &none            &none          &none  &trans
&trans  &kp LC(A)  &kp LC(S)  &kp LC(D)  &kp LC(F)  &kp LC(G)                  &kp LC(H)  &none  &kp RIGHT_SHIFT  &kp RIGHT_ALT  &none  &trans
&trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(B)  &trans  &trans  &kp LC(N)  &none  &none            &none          &none  &trans
&none   &none      &none      &none      &none      &none                      &none      &none  &none            &none          &none  &none
            >;
        };
    };
};
